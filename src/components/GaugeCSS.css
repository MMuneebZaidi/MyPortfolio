/* Define your variables */
:root {
    --color-black: hsl(0, 0%, 5%);
    --color-color: hsl(0, 0%, 100%);
    --color-html: hsl(15, 100%, 60%);
    --color-css: hsl(200, 100%, 60%);
    --color-scss: hsl(300, 100%, 60%);
    --color-js: hsl(60, 100%, 60%);
    --color-ts: hsl(220, 100%, 60%);
    --color-node: hsl(110, 100%, 60%);
    --color-react: hsl(180, 100%, 60%);
    --color-angular: hsl(0, 100%, 60%);
    --color-vue: hsl(145, 100%, 60%);
  
    --porcent-html: 95;
    --porcent-css: 85;
    --porcent-scss: 70;
    --porcent-js: 80;
    --porcent-ts: 55;
    --porcent-node: 30;
    --porcent-react: 12;
    --porcent-angular: 5;
    --porcent-vue: 2;
  }
  
  /* Global styles */
  * {
    box-sizing: border-box;
  }
  
  /* Container styles */
  .containerSkill {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: var(--color-black);
  }
  
  .container__progressbars {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    min-width: 270px;
    width: 100%;
    min-height: 100%;
  }
  
  /* Progressbar styles */
  .progressbar {
    position: relative;
    width: 170px;
    height: 170px;
    margin: 1em;
    transform: rotate(-90deg);
  }
  
  .progressbar__svg {
    position: relative;
    width: 100%;
    height: 100%;
  }
  
  .progressbar__svg-circle {
    width: 100%;
    height: 100%;
    fill: none;
    stroke-width: 10;
    stroke-dasharray: 440;
    stroke-dashoffset: 440;
    stroke: var(--color-color);
    stroke-linecap: round;
    transform: translate(5px, 5px);
  }
  
  /* Shadow styles */
  .shadow-html {
    filter: drop-shadow(0 0 5px var(--color-html));
  }
  
  .shadow-css {
    filter: drop-shadow(0 0 5px var(--color-css));
  }
  
  .shadow-scss {
    filter: drop-shadow(0 0 5px var(--color-scss));
  }
  
  .shadow-js {
    filter: drop-shadow(0 0 5px var(--color-js));
  }
  
  .shadow-ts {
    filter: drop-shadow(0 0 5px var(--color-ts));
  }
  
  .shadow-node {
    filter: drop-shadow(0 0 5px var(--color-node));
  }
  
  .shadow-react {
    filter: drop-shadow(0 0 5px var(--color-react));
  }
  
  .shadow-angular {
    filter: drop-shadow(0 0 5px var(--color-angular));
  }
  
  .shadow-vue {
    filter: drop-shadow(0 0 5px var(--color-vue));
  }
  
  /* Circle animations */
  .circle-html {
    animation: anim_circle-html 1s ease-in-out forwards;
  }
  
  .circle-css {
    animation: anim_circle-css 1s ease-in-out forwards;
  }
  
  .circle-scss {
    animation: anim_circle-scss 1s ease-in-out forwards;
  }
  
  .circle-js {
    animation: anim_circle-js 1s ease-in-out forwards;
  }
  
  .circle-ts {
    animation: anim_circle-ts 1s ease-in-out forwards;
  }
  
  .circle-node {
    animation: anim_circle-node 1s ease-in-out forwards;
  }
  
  .circle-react {
    animation: anim_circle-react 1s ease-in-out forwards;
  }
  
  .circle-angular {
    animation: anim_circle-angular 1s ease-in-out forwards;
  }
  
  .circle-vue {
    animation: anim_circle-vue 1s ease-in-out forwards;
  }
  
  /* Text styles */
  .progressbar__text {
    position: absolute;
    top: 50%;
    left: 50%;
    padding: 0.25em 0.5em;
    color: var(--color-color);
    font-family: Arial, Helvetica, sans-serif;
    border-radius: 0.25em;
    transform: translate(-50%, -50%) rotate(90deg);
  }
  
  /* Keyframes animations */
  @keyframes anim_circle-html {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-html) / 100));
    }
  }
  
  @keyframes anim_circle-css {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-css) / 100));
    }
  }
  
  @keyframes anim_circle-scss {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-scss) / 100));
    }
  }
  
  @keyframes anim_circle-js {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-js) / 100));
    }
  }
  
  @keyframes anim_circle-ts {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-ts) / 100));
    }
  }
  
  @keyframes anim_circle-node {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-node) / 100));
    }
  }
  
  @keyframes anim_circle-react {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-react) / 100));
    }
  }
  
  @keyframes anim_circle-angular {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-angular) / 100));
    }
  }
  
  @keyframes anim_circle-vue {
    to {
      stroke-dashoffset: calc(440 - (440 * var(--porcent-vue) / 100));
    }
  }
  